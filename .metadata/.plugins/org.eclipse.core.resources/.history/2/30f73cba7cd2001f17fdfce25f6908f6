package Projeto.labirinto.modelo;

import java.util.*;

public class Campo {
	private boolean aberto = false;
	private boolean murado = false;
	
	private final int coluna;
	private final int linha;
	private List<Campo> vizinhos = new ArrayList<>();
	
	boolean adicionarVizinho (Campo vizinho) {
		int deltaLinha = Math.abs(linha - vizinho.linha);
		int deltaColuna = Math.abs(coluna - vizinho.coluna);
		
		int deltaGeral = deltaLinha + deltaColuna;
		
		if(deltaGeral ==1) {
			vizinhos.add(vizinho);
			return true;
		}
		else {
			return false;
		}
	}

	public Campo(int coluna, int linha) {
		super();
		this.coluna = coluna;
		this.linha = linha;
	}
	boolean ladoMurado() {
		return vizinhos.stream().noneMatch(v -> v.murado);
	}
	boolean abrir() {
		if(!aberto && !murado) {
			aberto = true;
		if(murado) {
			  System.out.println("Este campo está bloqueado! Não é possível abrir.");
		}
		if(ladoMurado()) {
			vizinhos.forEach(v -> v.abrir());
		}
		return true;
		
	}
}
